<project name="JVoiceXML - 3rd party libraries" basedir=".">
    <description>
This file contains the 3rd party libary definitions, used by JVoiceXML.
    </description>

    <target name="-3rdparty-setup">
        <!-- third party libraries -->
        <property name="3rdparty.dir" value="../org.jvoicexml/3rdparty" />

        <!-- log4j library -->
        <property name="log4j.dir" value="${3rdparty.dir}/log4j1.2.16" />
        <property name="log4j.lib.dir" value="${log4j.dir}/lib" />
        <fileset dir="${log4j.lib.dir}" id="log4j.lib">
            <include name="log4j-1.2.16.jar" />
        </fileset>

        <!-- commons libraries -->
        <property name="commons.dir" value="${3rdparty.dir}/commons" />

        <!-- commons-logging library -->
        <property name="loggings.dir" value="${commons.dir}/logging1.1.1" />
        <property name="loggings.lib.dir" value="${loggings.dir}/lib" />
        <fileset dir="${loggings.lib.dir}" id="loggings.lib">
            <include name="commons-logging-1.1.1.jar" />
        </fileset>

        <!-- commons-pool library -->
        <property name="pool.dir" value="${commons.dir}/pool1.5.5" />
        <property name="pool.lib.dir" value="${pool.dir}/lib" />
        <fileset dir="${pool.lib.dir}" id="pool.lib">
            <include name="commons-pool-1.5.5.jar" />
        </fileset>

        <!-- commons-httpclient library -->
        <property name="httpclient.dir" value="${commons.dir}/httpclient4.0.3" />
        <property name="httpclient.lib.dir" value="${httpclient.dir}/lib" />
        <fileset dir="${httpclient.lib.dir}" id="httpclient.lib">
            <include name="httpclient-4.0.3.jar" />
            <include name="httpmime-4.0.3.jar" />
        </fileset>

        <!-- commons-httpcore library -->
        <property name="httpcore.dir" value="${commons.dir}/httpcore4.1" />
        <property name="httpcore.lib.dir" value="${httpcore.dir}/lib" />
        <fileset dir="${httpcore.lib.dir}" id="httpcore.lib">
            <include name="httpcore-4.1.jar" />
            <include name="httpcore-nio-4.1.jar" />
        </fileset>

        <!-- commons-codec library -->
        <property name="codec.dir" value="${commons.dir}/codec1.4" />
        <property name="codec.lib.dir" value="${codec.dir}/lib" />
        <fileset dir="${codec.lib.dir}" id="codec.lib">
            <include name="commons-codec-1.4.jar" />
        </fileset>

        <!-- mozilla rhino javascript library -->
        <property name="rhino.dir" value="${3rdparty.dir}/rhino1.7R3" />
        <property name="rhino.lib.dir" value="${rhino.dir}/lib" />
        <fileset dir="${rhino.lib.dir}" id="rhino.lib">
            <include name="js.jar" />
        </fileset>

        <!-- JSON simple library -->
        <property name="jsonsimple.dir" value="${3rdparty.dir}/jsonsimple1.1" />
        <property name="jsonsimple.lib.dir" value="${jsonsimple.dir}/lib" />
        <fileset dir="${jsonsimple.lib.dir}" id="jsonsimple.lib">
            <include name="json_simple-1.1.jar" />
        </fileset>
    	
        <!-- Java Media Framework library -->
        <property name="jmf.dir" value="${3rdparty.dir}/jmf2.1.1e" />
        <property name="jmf.lib.dir" value="${jmf.dir}/lib" />
        <fileset dir="${jmf.lib.dir}" id="jmf.lib">
            <include name="jmf.jar" />
            <include name="sound.jar" />
        </fileset>

      <!-- jlibrtp library -->
      <property name="jlibrtp.dir" value="${3rdparty.dir}/jlibrtp" />
      <property name="jlibrtp.lib.dir" value="${jlibrtp.dir}/lib" />
      <fileset dir="${jlibrtp.lib.dir}" id="jlibrtp.lib">
          <include name="jlibrtp.jar" />
      </fileset>

      <!-- freetts library -->
      <property name="freetts.dir" value="${3rdparty.dir}/freetts1.2" />
      <property name="freetts.lib.dir" value="${freetts.dir}/lib" />
      <fileset dir="${freetts.lib.dir}" id="freetts.lib">
          <include name="freetts.jar" />
          <include name="en_us.jar" />
          <include name="cmulex.jar" />
          <include name="cmu_us_kal.jar" />
      </fileset>

      <!-- sphinx4 library -->
      <property name="sphinx.dir" value="${3rdparty.dir}/sphinx4" />
      <property name="sphinx.lib.dir" value="${sphinx.dir}/lib" />
      <fileset dir="${sphinx.lib.dir}" id="sphinx4.lib">
          <include name="sphinx4.jar" />
          <include name="WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" />
      </fileset>

      <!-- jchardet library -->
      <property name="jchardet.dir" value="${3rdparty.dir}/jchardet1.1" />
      <property name="jchardet.lib.dir" value="${jchardet.dir}/lib" />
      <fileset dir="${jchardet.lib.dir}" id="jchardet.lib">
          <include name="chardet.jar" />
      </fileset>

      <!-- junit library -->
      <property name="junit.dir" value="${3rdparty.dir}/junit4.8.2" />
      <property name="junit.lib.dir" value="${junit.dir}/lib" />
      <fileset dir="${junit.lib.dir}" id="junit.lib">
          <include name="junit-4.8.2.jar" />
      </fileset>
    </target>

    <target name="-checkCheckstyle">
        <!-- checkstyle library -->
        <property name="checkstyle.dir" value="${3rdparty.dir}/checkstyle5.3" />
        <property name="checkstyle.lib.dir" value="${checkstyle.dir}/lib" />
            
        <path id="checkstyle.path">
            <fileset refid="loggings.lib" />
            <fileset dir="${checkstyle.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
        </path>

        <condition property="checkstyle.present">
            <and>
                <available file="${checkstyle.lib.dir}" type="dir" />
                <available classpathref="checkstyle.path"
                    classname="com.puppycrawl.tools.checkstyle.CheckStyleTask" />
            </and>
        </condition>
    </target>
    
    <target name="-initcheckstyle"
            description="Setup the checkstyle task"
            depends="-checkCheckstyle"
            if="checkstyle.present">
        <taskdef classname="com.puppycrawl.tools.checkstyle.CheckStyleTask"
                 name="checkstyle">
            <classpath refid="checkstyle.path" />
        </taskdef>
    </target>

    <target name="-checkJunit">
      <!-- Check if junit ist accessible for ant. -->
      <available classname="junit.framework.TestCase"
                 property="junit.present" classpathref="test.classpath"/>
      <fail unless="junit.present">
junit is not installed in your ANT distribution.
Download junit.jar from http://www.junit.org and copy junit.jar into
the lib directory of your ANT distribution.
          
ANT_HOME is set to '${ant.home}'.
      </fail>
    </target>

    <target name="-checkJavaVersion">
        <!-- Check if at least java 6 is used. -->
        <condition property="version1.6">
            <or>
                <equals arg1="1.6" arg2="${ant.java.version}" />
                <equals arg1="1.7" arg2="${ant.java.version}" />
            </or>
        </condition>

        <fail unless="version1.6">
You need at least java version 1.6 to compile this project.
You are using ${ant.java.version}.
        </fail>
    </target>
</project>
