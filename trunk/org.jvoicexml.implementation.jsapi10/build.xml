<project name="org.jvoicexml.implementation.jsapi10" default="jar" basedir=".">
    <description>
This file builds the JSAPI 1.0 implementation platform for JVoiceXml.
      
To override the current settings follow the instructions given in
org.jvoicexml/personal-props/README.txt
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="../org.jvoicexml/personal-props/ant.properties" />
    <property file="../org.jvoicexml/config-props/ant.properties" />

    <!-- Load the settings for 3rdparty libraries -->
    <import file="3rdparty-libs.xml" />

    <target name="-setup" depends="-local-3rdparty-setup">
        <!-- The component built here-->
        <property name="component" value="org.jvoicexml.implementation.jsapi10" />

        <!-- directory structure -->
        <property name="src" value="src" />
        <property name="build" value="classes" />
        <property name="etc" value="etc" />
        <property name="dist" value="../org.jvoicexml/dist" />
        <property name="apidoc" value="${apidoc.basedir}/${component}" />
        <property name="config" value="../org.jvoicexml/config" />

        <condition property="windows">
            <os family="windows" />
        </condition>

        <!-- main jar files -->
        <property name="dist.implementation.jsapi10.jar" value="${dist}/${component}.jar" />

        <!-- the class path for 3rdparty libraries -->
        <path id="project.classpath">
            <path refid="jvxml.core.lib" />
            <fileset refid="log4j.lib" />
            <fileset refid="rhino.lib" />
            <fileset refid="jsapi1.lib" />
        </path>
    </target>

    <target name="-init" depends="-setup">
        <!-- Create build directories -->
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />
    </target>

    <target name="-initdocs" unless="distribution">
        <property name="access" value="private" />
    </target>

    <target name="configuration" depends="-setup">
        <xslt in="${jvxml.core.dir}/run.xml" out="${jvxml.core.dir}/run-tmp.xml" style="${etc}/patch-runscript-talking-java.xsl">
            <outputproperty name="method" value="xml" />
            <outputproperty name="standalone" value="no" />
            <outputproperty name="encoding" value="UTF-8" />
            <outputproperty name="indent" value="yes" />
            <param name="tjpath" expression="${jvxml.jsapi10.talkingJava.path}" />
        </xslt>
        <copy file="${jvxml.core.dir}/run-tmp.xml" tofile="${jvxml.core.dir}/run.xml" overwrite="true" />
        <delete file="${jvxml.core.dir}/run-tmp.xml" />
        <copy todir="${config}" overwrite="true">
            <fileset dir="${etc}">
                <include name="jsapi10-talking-java-implementation.xml" />
            </fileset>
        </copy>
    </target>

    <target name="clean" depends="-setup" description="Remove all compiled and distribution files">
        <delete dir="${build}" failonerror="false" />
        <delete file="${dist.implementation.jsapi10.jar}" failonerror="false" />
    </target>

    <target name="compile" depends="-init,-checkJavaVersion" description="Compile the JSAPI 1.0 sources">
        <echo message="compiling ${component} with debug=${javac.debug}, optimize=${javac.optimize}" />
        <javac destdir="${build}" includeantruntime="false" optimize="${javac.optimize}" debug="${javac.debug}" deprecation="on">
            <src path="${src}" />
            <include name="org/jvoicexml/implementation/jsapi10/**/*.java" />
            <classpath refid="project.classpath" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="jar" depends="compile" description="Pack all compiled files into jar files">
        <!-- jsapi 1.0 implementation jar file -->
        <jar jarfile="${dist.implementation.jsapi10.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jsapi10/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor" value="JVoiceXML group" />
                    <attribute name="Implementation-Title" value="JVoiceXML JSAPI 1.0 base layer" />
                    <attribute name="Implementation-Version" value="${version}" />
                </section>
            </manifest>
        </jar>
    </target>

    <target name="rebuild" description="Rebuild the jars from scratch" depends="clean,jar" />

    <target name="apidoc" description="create javadoc" depends="-setup,-initdocs">
        <echo message="creating javadoc with access: ${javadoc.access}" />

        <delete dir="${apidoc}" failonerror="false" />

        <javadoc destdir="${apidoc}" windowtitle="JVoiceXML JSAPI 1.0 Implementation Platform" author="true" version="true" linksource="true" access="${javadoc.access}" use="true">
            <packageset dir="${src}" />
            <doctitle>
                <![CDATA[JVoiceXML - a free VoiceXML interpreter]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2005-2014<a href="http://jvoicexml.sourceforge.net">JVoiceXML group</a>.</i>]]>
            </bottom>
        <!-- Custom tags -->
        <tag name="todo" description="Stuff to complete" />
        <classpath>
            <path refid="project.classpath" />
        </classpath>

        <!-- Resolve used libraries -->
        <link offline="true" href="http://java.sun.com/javase/6/docs/api/" packagelistLoc="${3rdparty.dir}" />
        <link offline="true" resolveLink="false" href="${jvxml.core.apidoc}" packagelistLoc="${apidoc.basedir}/org.jvoicexml" />
        <link offline="true" href="http://logging.apache.org/log4j/docs/api/" packagelistLoc="${log4j.dir}" />
        <link offline="true" href="http://java.sun.com/products/java-media/speech/forDevelopers/jsapi-doc" packagelistLoc="${jsapi1.dir}" />

        <!-- Group definitions -->
        <group title="JSAPI 1.0 based implementation platform">
            <package name="org.jvoicexml.implementation.jsapi10*" />
        </group>
    </javadoc>
</target>

<target name="checkstyle" description="Check for JVoiceXML coding standard" depends="compile, -initcheckstyle" if="checkstyle.present">
    <property name="checkstyle-target.dir" value="${dist}/checkstyle/${component}" />
    <mkdir dir="${checkstyle-target.dir}" />
    <property name="checkstyle.data" value="${checkstyle-target.dir}/checkstyle-data.xml" />
    <checkstyle config="${jvxml.core.dir}/etc/jvoicexml-checks.xml" failonviolation="false">
        <classpath path="${project.classpath}" />
        <classpath refid="jvxml.core.lib" />
        <classpath location="${build}" />
        <fileset dir="${src}">
            <include name="org/jvoicexml/**/*.java" />
        </fileset>
        <formatter type="xml" tofile="${checkstyle.data}" />
    </checkstyle>
    <xslt style="${jvxml.core.dir}/etc/checkstyle-frames.xsl" in="${checkstyle.data}" out="${checkstyle-target.dir}/report.html">
        <param name="output.dir" expression="${checkstyle-target.dir}" />
    </xslt>
</target>

<target name="distribution" depends="jar">
    <property name="distFolder" value="${dist}/${jvxml.version}" />
    <copy tofile="${distFolder}/config/jsapi10-talking-java-implementation.xml" file="${etc}/jsapi10-talking-java-implementation-dist.xml" />
    <copy todir="${distFolder}/config">
        <fileset dir="${etc}">
            <include name="jvoicexml.gram" />
        </fileset>
    </copy>
    <copy todir="${distFolder}/lib" file="${dist.implementation.jsapi10.jar}" />
    <copy todir="${distFolder}/lib">
        <fileset refid="jsapi1.lib" />
        <fileset dir="${local-3rdparty.dir}/talkingjava/lib">
            <include name="*.jar" />
            <include name="*.dll" />
        </fileset>
    </copy>
</target>
</project>
