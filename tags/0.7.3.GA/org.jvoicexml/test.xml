<project name="JVoiceXML unit tests" default="test" basedir=".">
    <description>
This file runs unit tests on JVoiceXML.
    </description>

    <import file="build.xml" />

    <target name="-test-setup" depends="-setup">
        <!-- directory structure -->
        <property name="test" value="${basedir}/test" />

        <property name="test.src" value="${test}/unitTests" />
        <property name="test.results" value="${dist}/unittests" />
        <property name="test.build" value="${test}/classes" />
        <property name="test.config" value="${test}/config" />

        <!-- the class path for the test case -->
        <path id="test.classpath">
            <path refid="project.classpath" />
            <pathelement location="${build}" />
            <pathelement location="../org.jvoicexml.xml/classes" />
            <fileset dir="${3rdparty.dir}/junit4.4/lib">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="-checkJunit" depends="-test-setup">
        <!-- Check if junit ist accessible for ant. -->
        <available classname="junit.framework.TestCase"
                   property="junit.present" classpathref="test.classpath"/>
        <fail unless="junit.present">
junit is not installed in your ANT distribution.
Download junit.jar from http://www.junit.org and copy junit.jar into
the lib directory of your ANT distribution.
            
ANT_HOME is set to '${ant.home}'.
        </fail>
    </target>

    <target name="-inittest" depends="-test-setup">
        <mkdir dir="${test.build}" />
        <mkdir dir="${test.results}" />
    </target>

    <target name="cleantest"
        description="Clean the compiled tests and test results">
        <delete dir="${test.build}" includeemptydirs="true"/>
        <delete dir="${test.results}" includeemptydirs="true"/>
    </target>

    <target name="compiletests"
            depends="-inittest,compile,-checkJunit"
            description="Compile the JAVA sources for the test cases">
        <javac destdir="${test.build}"
               optimize="off"
               debug="on"
               deprecation="on"
               encoding="iso-8859-1">
            <src path="${test.src}" />
            <include name="org/jvoicexml/**/*.java" />
            <classpath refid="test.classpath" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="test" depends="compiletests"
            description="run unit tests on all test cases">
        <junit printsummary="yes"
               maxmemory="256M"
               fork="yes"
               haltonfailure="no"
               showoutput="yes">
            <classpath location="${test.build}" />
            <classpath refid="test.classpath" />
            <classpath location="${test.config}" />
            <classpath location="${config}" />
            <classpath>
                <fileset refid="loggings.lib" />
            </classpath>

            <formatter type="xml" />
            <batchtest todir="${test.results}">
                <fileset dir="${test.build}">
                    <include name="org/jvoicexml/**/Test*" />
                    <exclude name="org/jvoicexml/**/Test*$*" />
                    <exclude name="org/jvoicexml/test/**" />
                </fileset>
            </batchtest>
        </junit>

        <junitreport>
            <fileset dir="${test.results}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${test.results}/html" />
        </junitreport>
    </target>

    <target name="testSingle" depends="compiletests"
            description="run unit tests on a single test cases">
        <echo message="${run.class}" />
        <fail unless="run.class">Must set property 'run.class'</fail>
        <junit printsummary="yes"
               maxmemory="256M"
               fork="yes"
               haltonfailure="no"
               showoutput="yes">
            <classpath location="${test.build}" />
            <classpath refid="test.classpath" />
            <classpath location="${test.config}" />
            <classpath location="${config}" />
            <classpath>
                <fileset refid="loggings.lib" />
            </classpath>

            <formatter type="xml" />
            <test name="${run.class}" todir="${test.results}"/>
        </junit>

        <junitreport>
            <fileset dir="${test.results}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${test.results}/html" />
        </junitreport>
    </target>
</project>
