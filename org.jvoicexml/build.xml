<project name="JVoiceXML" default="run" basedir=".">
    <description>
This file builds JVoiceXML.
To override the current settings follow the instructions given in
personal-props/README.txt

If you want to compile JVoiceXML with JSAPI2 support you will have to download
the jsapi2.jar from http://www.conversations.com/jsapi2/release.php and
copy it into the folder 3rdparty/jsapi2.0/lib.
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="personal-props/ant.properties" />
    <property file="config-props/ant.properties" />

    <!-- Load the settings for 3rdparty libraries -->
    <import file="3rdparty-libs.xml" />

    <target name="-setup" depends="-3rdparty-setup">
        <!-- directory structure -->
        <property name="src" value="src" />
        <property name="build" value="classes" />
        <property name="dist" value="dist" />
        <property name="apidoc" value="doc/api" />
        <property name="config" value="config" />
        <property name="etc" value="etc" />

        <condition property="windows">
            <os family="windows" />
        </condition>

        <!-- main jar files -->
        <property name="dist.jvxml.jar" value="${dist}/jvxml.jar" />
        <property name="dist.xml.jar" value="${dist}/jvxml-xml.jar" />
        <property name="dist.implementation.jsapi10.jar"
                  value="${dist}/jvxml-jsapi1.0.jar" />
        <property name="dist.implementation.jsapi10.jvxml.jar"
                  value="${dist}/jvxml-jsapi1.0-impl.jar" />
        <property name="dist.implementation.jtapi13.jvxml.jar"
                  value="${dist}/jvxml-jtapi1.3.jar" />
        <property name="dist.client.jar" value="${dist}/jvxml-client.jar" />

        <!-- the class path for 3rdparty libraries -->
        <path id="project.classpath">
            <fileset refid="log4j.lib" />
            <fileset refid="freetts.lib" />
            <fileset refid="sphinx.lib" />
            <fileset refid="rhino.lib" />
            <fileset refid="spring.lib" />
            <fileset refid="pool.lib" />
            <fileset refid="httpclient.lib" />
            <fileset refid="jtapi.lib" />
            <fileset refid="gjtapi.lib" />
            <fileset refid="jmf.lib" />
            <fileset refid="jlibrtp.lib" />
            <fileset refid="jsr173.lib" />
        </path>
    </target>

    <target name="-checkJavaVersion">
        <!-- Check if at least java 5 is used. -->
        <condition property="version1.5">
            <or>
                <equals arg1="1.5" arg2="${ant.java.version}" />
                <equals arg1="1.6" arg2="${ant.java.version}" />
            </or>
        </condition>

        <fail unless="version1.5">
You need at leasr java version 1.5 to compile this project.
You're using ${ant.java.version}
    </fail>
    </target>

    <target name="-init" depends="-setup">
        <!-- Create build directories -->
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />
    </target>

    <target name="-initdocs" unless="distribution">
        <property name="access" value="private" />
    </target>

    <target name="-initcompile" unless="distribution">
        <property name="optimize" value="off" />
        <property name="debug" value="on" />
    </target>

    <target name="clean"
            description="Remove all compiled and distribution files">
        <delete dir="${build}" failonerror="false" />
        <delete failonerror="false">
            <fileset dir="${dist}">
                <include name="*.jar" />
            </fileset>
        </delete>
        <ant dir="../org.jvoicexml.implementation.jsapi20"
            inheritall="false" target="clean"/>
        <ant dir="../org.jvoicexml.implementation.text"
            inheritall="false" target="clean"/>
    </target>

    <target name="-compile"
            depends="-init, -initcompile, -checkJavaVersion"
            description="Compile the core JAVA sources">
        <echo message="compiling core with debug=${debug}, optimize=${optimize}" />
        <javac destdir="${build}"
               optimize="${optimize}"
               debug="${debug}"
               deprecation="on"
               encoding="iso-8859-1"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${src}" />
            <include name="org/jvoicexml/**/*.java" />
            <exclude name="org/jvoicexml/implementation/jsapi10/**/*.java" />
            <exclude name="org/jvoicexml/implementation/jsapi20/**/*.java" />
            <classpath refid="project.classpath" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="-compileJsapi10"
            depends="-compile"
            description="Compile the JSAPI 1.0 sources">
        <echo message="compiling JSAPI 1.0 layer with debug=${debug}, optimize=${optimize}" />
        <javac destdir="${build}"
               optimize="${optimize}"
               debug="${debug}"
               deprecation="on"
               encoding="iso-8859-1"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${src}" />
            <include name="org/jvoicexml/implementation/jsapi10/**/*.java" />
            <classpath refid="project.classpath" />
            <classpath>
                <fileset dir="${build}" />
                <fileset refid="jsapi1.lib" />
            </classpath>
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="-buildcomponents">
        <echo message="building org.jvoicexml.implementation.jsapi20"/>
        <ant dir="../org.jvoicexml.implementation.jsapi20"
            inheritall="false"/>
        <echo message="building org.jvoicexml.implementation.text"/>
        <ant dir="../org.jvoicexml.implementation.text"
            inheritall="false"/>
    </target>

    <target name="compile"
            depends="-compile, -compileJsapi10, -buildcomponents"
            description="Compile the JAVA sources">
    </target  >

    <target name="jar"
            depends="compile"
            description="Pack all compiled files into jar files">
        <!-- main jar file -->
        <jar jarfile="${dist.jvxml.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
                <exclude name="org/jvoicexml/xml/**" />
                <exclude name="org/jvoicexml/implementation/jsapi10/**" />
                <exclude name="org/jvoicexml/implementation/jsapi20/**" />
                <exclude name="org/jvoicexml/implementation/jtapi/**" />
                <exclude name="org/jvoicexml/implementation/text/**" />
                <exclude name="org/jvoicexml/callmanager/jtapi/**" />
                <exclude name="org/jvoicexml/client/**" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML main" />
                </section>
            </manifest>
        </jar>

        <!-- xml jar file -->
        <jar jarfile="${dist.xml.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/xml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML xml library" />
                </section>
            </manifest>
        </jar>

        <!-- jsapi 1.0 implementation jar file -->
        <jar jarfile="${dist.implementation.jsapi10.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jsapi10/**/*.class" />
                <exclude name="org/jvoicexml/implementation/jsapi10/jvxml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML jsapi 1.0 base layer" />
                </section>
            </manifest>
        </jar>

        <!-- jsapi 1.0 demo implementation jar file -->
        <jar jarfile="${dist.implementation.jsapi10.jvxml.jar}"
             compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jsapi10/jvxml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML jsapi 1.0 demo implementation" />
                </section>
            </manifest>
        </jar>

        <!-- jtapi 1.3 implementation jar file -->
        <jar jarfile="${dist.implementation.jtapi13.jvxml.jar}"
             compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jtapi/**/*.class" />
                <include name="org/jvoicexml/callmanager/jtapi/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML jtapi 1.3 layer" />
                </section>
            </manifest>
        </jar>

        <!-- client jar file -->
        <jar jarfile="${dist.client.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/JVoiceXml.class" />
                <include name="org/jvoicexml/Session.class" />
                <include name="org/jvoicexml/CallControl.class" />
                <include name="org/jvoicexml/CharacterInput.class" />
                <include name="org/jvoicexml/RemoteClient.class" />
                <include name="org/jvoicexml/RemoteConnectable.class" />
                <include name="org/jvoicexml/implementation/UserInputListener.class" />
                <include name="org/jvoicexml/event/**/*.class" />
                <include name="org/jvoicexml/client/**/*.class" />
                <include name="org/jvoicexml/documentserver/schemestrategy/MappedDocumentRepository.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML client files" />
                </section>
            </manifest>
        </jar>
    </target>

    <target name="rebuild"
            description="Rebuild the jars from scratch"
            depends="clean,jar" />

    <target name="apidoc" description="create javadoc"
        depends="-setup,-initdocs">
        <echo message="creating javadoc with access: ${access}" />

        <delete dir="${apidoc}" />

        <javadoc destdir="${apidoc}"
                 windowtitle="JVoiceXML"
                 author="true"
                 version="true"
                 access="${access}"
                 use="true">
            <packageset dir="src" />
            <packageset dir="../org.jvoicexml.implementation.jsapi20/src" />
            <doctitle>
                <![CDATA[JVoiceXML - a free VoiceXML interpreter]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2005-2007 <a href="http://jvoicexml.sourceforge.net">JVoiceXML group</a>.</i>]]>
            </bottom>
        <tag name="todo" description="Stuff to complete" />
        <classpath>
            <path refid="project.classpath" />
            <fileset refid="jsapi1.lib" />
        </classpath>
        <link offline="true"
              href="http://java.sun.com/j2se/1.5.0/docs/api/"
              packagelistLoc="${3rdparty.dir}" />
        <link offline="true"
              href="http://www.mozilla.org/rhino/apidocs/"
              packagelistLoc="${rhino.dir}" />
        <link offline="true"
              href="http://java.sun.com/products/java-media/speech/forDevelopers/jsapi-doc/"
              packagelistLoc="${jsapi.dir}" />
        <link offline="true"
              href="http://logging.apache.org/log4j/docs/api/"
              packagelistLoc="${log4j.dir}" />
        <link offline="true"
              href="http://www.springframework.org/api"
              packagelistLoc="${spring.dir}" />

        <group title="Parsing and creation of VoiceXML documents">
            <package name="org.jvoicexml.xml*" />
        </group>
        <group title="Implementation platform">
            <package name="org.jvoicexml.implementation*" />
        </group>
        <group title="Document Server">
            <package name="org.jvoicexml.documentserver*" />
        </group>
        <group title="Events">
            <package name="org.jvoicexml.event*" />
        </group>
        <group title="Configuration">
            <package name="org.jvoicexml.config*" />
        </group>
        <group title="Main package containing the VoiceXML interpreter">
            <package name="org.jvoicexml.interpreter*" />
        </group>
        <group title="JNDI support">
            <package name="org.jvoicexml.jndi*" />
        </group>
        <group title="Client based interaction">
            <package name="org.jvoicexml.client*" />
        </group>
        </javadoc>
    </target>

    <target name="checkstyle"
        description="Check for JVoiceXML coding standard"
        depends="compile, -initcheckstyle"
        if="checkstyle.present">
        <!-- checkstyle library -->
        <checkstyle config="${etc}/jvoicexml-checks.xml">
            <classpath>
                <pathelement path="${project.classpath}" />
                <pathelement location="${build}" />
            </classpath>
            <fileset dir="${src}">
                <include name="org/jvoicexml/**/*.java" />
            </fileset>
        </checkstyle>
    </target>

    <target name="-adaptConfiguration" depends="-init">
        <copy file="${etc}/phone1" todir="${config}" />
        <replace file="${config}/phone1">
            <replacefilter token="@sip.address@" value="${sip.address}" />
        </replace>
        <xslt in="${etc}/callmanager.xml"
          out="${config}/callmanager.xml"
          style="${etc}/patch-callmanager.xsl">
            <outputproperty name="method" value="xml" />
            <outputproperty name="standalone" value="no" />
            <outputproperty name="encoding" value="UTF-8" />
            <outputproperty name="indent" value="yes" />
            <param name="terminal" expression="${sip.terminal}" />
            <param name="port" expression="${sip.port}" />
        </xslt>
    </target>

    <target name="run"
        description="Run the VoiceXML interpreter"
        depends="jar,-adaptConfiguration">
    <java classname="org.jvoicexml.JVoiceXmlMain" fork="true" maxmemory="256m">
        <jvmarg value="-Djava.util.logging.config.file=${config}/java-logging.properties" />
        <classpath>
            <path refid="project.classpath" />
            <fileset refid="loggings.lib" />
            <fileset refid="jainsip.lib" />
            <fileset refid="stun4j.lib" />
            <fileset refid="jsapi1.lib" />
            <pathelement path="${build}" />
            <pathelement path="${config}" />
        </classpath>
    </java>
    </target>

    <target name="debug"
        description="Run the VoiceXML interpreter in debug mode"
        depends="jar,-adaptConfiguration">
    <java classname="org.jvoicexml.JVoiceXmlMain" fork="true" maxmemory="256m">
        <jvmarg value="-Djava.util.logging.config.file=${config}/java-logging.properties" />
        <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,address=12367" />
        <classpath>
            <path refid="project.classpath" />
            <fileset refid="jsapi1.lib" />
            <fileset refid="loggings.lib" />
            <fileset refid="jainsip.lib" />
            <fileset refid="stun4j.lib" />
            <pathelement path="${build}" />
            <pathelement path="${config}" />
        </classpath>
    </java>
    </target>

    <target name="shutdown"
        description="Terminates the VoiceXML interpreter"
        depends="jar">
    <makeurl property="codebase" file="${dist}/jvxml.jar" />
    <java classname="org.jvoicexml.RemoteShutdown" fork="true">
        <jvmarg value="-Djava.security.policy=${build}/jvoicexml.policy" />
        <jvmarg value="-Djava.rmi.server.codebase=${codebase}" />
        <classpath>
            <path refid="project.classpath" />
            <fileset refid="loggings.lib" />
            <pathelement path="${build}" />
            <pathelement path="${config}" />
        </classpath>
    </java>
    </target>
</project>
