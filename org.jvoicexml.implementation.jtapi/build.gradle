apply plugin: 'java'
apply plugin: "com.github.eerohele.saxon-gradle"
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath  "gradle.plugin.com.github.eerohele:saxon-gradle:0.2.1"
    }
}

repositories {
    mavenCentral()
}

configurations {
    jvxmlConfiguration
}

dependencies {
    jvxmlConfiguration fileTree(dir: "src/main/config")

    compile fileTree(dir: './3rdparty/gjtapi1.9/lib', include: ['*.jar'])
    compile fileTree(dir: './3rdparty/jainsip1.19/lib', include: ['*.jar'])
    compile fileTree(dir: './3rdparty/jtapi1.3/lib', include: ['*.jar'])
    compile fileTree(dir: './3rdparty/mjsip/lib', include: ['*.jar'])
    compile fileTree(dir: './3rdparty/stun4j/lib', include: ['*.jar'])
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    compile project(':org.jvoicexml')
    compile project(':org.jvoicexml.client')
}

task xsltImplementation(type: com.github.eerohele.SaxonXsltTask) {
    stylesheet "${projectDir}/src/main/config/patch-configuration.xsl"
    input "${projectDir}/src/main/config/jtapi-implementation.xml"
    output "${project(':org.jvoicexml').copyConfiguration.destinationDir}/jtapi-implementation.xml"
    parameters(
        buildpath: "${buildDir}/libs",
        version: JVOICEXML_VERSION,
        libs: configurations.compile
    )
}

task xsltImplementationDistribution(type: com.github.eerohele.SaxonXsltTask) {
    stylesheet "${projectDir}/src/main/config/patch-configuration.xsl"
    input "${projectDir}/src/main/config/jtapi-implementation.xml"
    output "${project(':main').buildDir}/config/jtapi-implementation.xml"
    parameters(
        buildpath: "lib",
        version: JVOICEXML_VERSION,
        libs: configurations.compile
    )
}


task xsltCallmanager(type: com.github.eerohele.SaxonXsltTask)  {
    stylesheet "${projectDir}/src/main/config/patch-callmanager-configuration.xsl"
    input "${projectDir}/src/main/config/jtapi-callmanager.xml"
    output "${project(':org.jvoicexml').copyConfiguration.destinationDir}/jtapi-callmanager.xml"
    parameters(
        buildpath: "${buildDir}/libs",
        version: JVOICEXML_VERSION,
        libs: configurations.compile,
        providername: project.property('org.jvoicexml.callmanager.jtapi.sip.providername'),
        terminal: project.property('org.jvoicexml.callmanager.jtapi.sip.terminal'),
        inputType: project.property('org.jvoicexml.callmanager.jtapi.sip.inputType'),
        outputType: project.property('org.jvoicexml.callmanager.jtapi.sip.outputType')
    )
}

task xsltCallmanagerDistribution(type: com.github.eerohele.SaxonXsltTask)  {
    stylesheet "${projectDir}/src/main/config/patch-callmanager-configuration.xsl"
    input "${projectDir}/src/main/config/jtapi-callmanager.xml"
    output "${project(':main').buildDir}/config/jtapi-callmanager.xml"
    parameters(
        buildpath: "lib",
        version: JVOICEXML_VERSION,
        libs: configurations.compile,
        providername: project.property('org.jvoicexml.callmanager.jtapi.sip.providername'),
        terminal: project.property('org.jvoicexml.callmanager.jtapi.sip.terminal'),
        inputType: project.property('org.jvoicexml.callmanager.jtapi.sip.inputType'),
        outputType: project.property('org.jvoicexml.callmanager.jtapi.sip.outputType')
    )
}

task copyReferencedLibraries(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile) {
         include 'gjtapi*.jar',
         'jainsip.jar',
         'jtapi-1.3.1*.jar'
         'mjsip*.jar'
         'Stun4J*.jar'
    }
}

task copyConfiguration(type: Copy) {
    from configurations.jvxmlConfiguration.files {
        include 'ua'
    }

    into "${project(':org.jvoicexml').copyConfiguration.destinationDir}"
}

jar {
    version = JVOICEXML_VERSION

    dependsOn xsltImplementation
    dependsOn xsltImplementationDistribution
    dependsOn xsltCallmanager
    dependsOn xsltCallmanagerDistribution
    dependsOn copyReferencedLibraries
    dependsOn copyConfiguration

    manifest {
        attributes("Implementation-Title": "JVoiceXML JTAPI implementation platform",
                   "Implementation-Vendor": "JVoiceXML group",
                   "Implementation-Version": JVOICEXML_VERSION)
    }
    baseName 'org.jvoicexml.implementation.jtapi'
}

install {
   version = JVOICEXML_VERSION
   group = JVOICEXML_GROUP
}

clean {
    delete file("${project(':org.jvoicexml').copyConfiguration.destinationDir}/jtapi-callmanager.xml")
    delete file("${project(':org.jvoicexml').copyConfiguration.destinationDir}/jtapi-implementation.xml")
    delete file("${project(':org.jvoicexml').copyConfiguration.destinationDir}/ua")
}
