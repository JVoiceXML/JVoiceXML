apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    if (project.property('JVOICEXML_DEVELOPMENT_ENVIRONMENT') == 'true') {
        compile project(':org.jvoicexml.xml')
    } else {
        compile group: 'org.jvoicexml', name: 'org.jvoicexml.xml', version: JVOICEXML_VERSION
    }
}

jar {
    version = JVOICEXML_VERSION

    manifest {
        attributes("Implementation-Title": "JVoiceXML CoiceXML Creation Demo",
                   'Implementation-Vendor': 'switch',
                   'Implementation-Version': JVOICEXML_VERSION,
                   'Built-By'       : System.properties['user.name'],
                   'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Created-By'     : "Gradle ${gradle.gradleVersion}",
                   'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                   'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}")
    }
    baseName 'org.jvoicexml.demo.voicexmlcreationdemo'
}

run {
    mainClassName = "org.jvoicexml.demo.voicexmlcreationdemo.VoiceXMLCreationDemo"
    classpath += files("${buildDir}/resources/main")
    jvmArgs = ["-Djvoicexml.config=${buildDir}/resources/main"]
}
