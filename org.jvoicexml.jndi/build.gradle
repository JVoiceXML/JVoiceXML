apply plugin: 'java'
apply plugin: "com.github.eerohele.saxon-gradle"
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath  "gradle.plugin.com.github.eerohele:saxon-gradle:0.2.1"
    }
}

repositories {
    mavenCentral()
}

configurations {
    jvxmlConfiguration
}

dependencies {
    jvxmlConfiguration fileTree(dir: "src/main/config")

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    compile project(':org.jvoicexml')
    compile project(':org.jvoicexml.client')
}

xslt {
    stylesheet "${projectDir}/src/main/config/patch-configuration.xsl"
    input "${projectDir}/src/main/config/jvxml-jndi.xml"
    output "${project(':org.jvoicexml').copyConfiguration.destinationDir}/jvxml-jndi.xml"
    parameters(
        repositoryname: JVOICEXML_JNDI_REPOSITORY,
        version: JVOICEXML_VERSION,
        buildpath: "${buildDir}/libs",
        port: JVOICEXML_JNDI_PORT,
        classServerPort: JVOICEXML_JNDI_CLASSERVER_PORT
    )
}

task xsltDistribution(type: com.github.eerohele.SaxonXsltTask) {
    stylesheet "${projectDir}/src/main/config/patch-configuration.xsl"
    input "${projectDir}/src/main/config/jvxml-jndi.xml"
    output "${project(':main').buildDir}/config/jvxml-jndi.xml"
    parameters(
        buildpath: "lib",
        repositoryname: JVOICEXML_JNDI_REPOSITORY,
        version: JVOICEXML_VERSION,
        port: JVOICEXML_JNDI_PORT,
        classServerPort: JVOICEXML_JNDI_CLASSERVER_PORT
    )
}

task copyConfiguration(type: Copy) {
    into "${project(':org.jvoicexml').copyConfiguration.destinationDir}"
}


task copyReferencedLibraries(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile) {
        include 'org.jvoicexml.client*.jar'
    }
}

jar {
    version = JVOICEXML_VERSION

    dependsOn xslt
    dependsOn xsltDistribution
    dependsOn copyConfiguration
    dependsOn copyReferencedLibraries
    
    manifest {
        attributes("Implementation-Title": "JVoiceXML JNDI library",
                   'Implementation-Vendor': 'switch',
                   'Implementation-Version': JVOICEXML_VERSION,
                   'Built-By'       : System.properties['user.name'],
                   'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Created-By'     : "Gradle ${gradle.gradleVersion}",
                   'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                   'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}")
    }
    baseName 'org.jvoicexml.jndi'
}

install {
   version = JVOICEXML_VERSION
   group = JVOICEXML_GROUP
}

clean {
    delete file("${project(':org.jvoicexml').copyConfiguration.destinationDir}/jvxml-jndi.xml")
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    version = JVOICEXML_VERSION
    group = JVOICEXML_GROUP

    repositories {
        mavenDeployer {
            beforeDeployment { 
                MavenDeployment deployment -> signing.signPom(deployment) 
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: JVOICEXML_OSSRH_USERNAME, password: JVOICEXML_OSSRH_PASSWORD)
            }
    
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: JVOICEXML_OSSRH_USERNAME, password: JVOICEXML_OSSRH_PASSWORD)
            }
    
            pom.project {
                name 'JVoiceXML'
                groupId = JVOICEXML_GROUP
                packaging 'jar'
                description 'The Open Source Voice Browser'
                url 'https://github.com/JVoiceXML/JVoiceXML'
                
                scm {
                    connection 'scm:git:git@github.com:JVoiceXML/JVoiceXML.git'
                    developerConnection 'scm:git:ssh://github.com:JVoiceXML/JVoiceXML.git'
                    url "https://github.com/JVoiceXML/JVoiceXML/tree/release/${JVOICEXML_VERSION}"
                }
                    
                licenses {
                    license {
                        name 'GNU Lesser General Public License, Version 2.1'
                        url 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }
    
                developers {
                    developer {
                        id 'schnelle'
                        name 'Dirk Schnelle-Walka'
                        email 'dirk.schnelle@jvoicexml.org'
                    }
                }
            }
        }
    }
}