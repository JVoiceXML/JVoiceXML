buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath  "gradle.plugin.com.github.eerohele:saxon-gradle:0.2.1"
    }
}

apply plugin: 'java'
apply plugin: "com.github.eerohele.saxon-gradle"
apply plugin: 'application'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    jvxmlConfiguration
}

dependencies {
    jvxmlConfiguration fileTree(dir: "src/main/config")
    
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    if (project.property('JVOICEXML_DEVELOPMENT_ENVIRONMENT') == 'true') {
        compile project(':org.jvoicexml.client')
        compile project(':org.jvoicexml.xml')
    } else {
        compile group: 'org.jvoicexml', name: 'org.jvoicexml.client', version: JVOICEXML_VERSION
        compile group: 'org.jvoicexml', name: 'org.jvoicexml.xml', version: JVOICEXML_VERSION
    }
}

xslt {
    stylesheet "${projectDir}/src/main/config/patch-vxml.xsl"
    input "${projectDir}/src/main/config/objectdemo.vxml"
    output "${sourceSets.main.output.resourcesDir}/objectdemo.vxml"
    parameters(
        datapath: "${sourceSets.main.output.classesDirs.singleFile.toURL()}/"
    )
}

jar {
    version = JVOICEXML_VERSION

    dependsOn xslt

    manifest {
        attributes("Implementation-Title": "JVoiceXML Object Tag Demo",
                   'Implementation-Vendor': 'switch',
                   'Implementation-Version': JVOICEXML_VERSION,
                   'Built-By'       : System.properties['user.name'],
                   'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Created-By'     : "Gradle ${gradle.gradleVersion}",
                   'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                   'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}")
    }
    baseName 'org.jvoicexml.demo.objecttagdemo'
}

def getIP() {
    InetAddress result = null;
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses();
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement();
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return address.getHostAddress();
                } else if (result == null) {
                    result = address;
                }
            }
        }
    }
    return (result != null ? result : InetAddress.getLocalHost()).getHostAddress();
}

run {
    dependsOn xslt

    mainClassName = "org.jvoicexml.demo.objecttagdemo.ObjectTagDemo"
    classpath += files("${buildDir}/resources/main")
    jvmArgs = ["-Djvoicexml.config=${buildDir}/resources/main",
               "-Djava.security.manager",
               "-Djava.rmi.server.codebase=http://${getIP()}:9698/",
               "-Djava.rmi.server.useCodebaseOnly=false",
               "-Djava.security.policy=${projectDir}/src/main/config/jvoicexml.policy"]
}
