<project name="JVoiceXML unit tests" default="test" basedir=".">
  <description>
This file runs unit tests on JVoiceXML.
    </description>

  <import file="build.xml" />

  <target name="-test-setup" depends="-setup">
    <!-- directory structure -->
    <property name="test" value="${basedir}" />

    <property name="test.src" value="${test}/src" />
    <property name="test.results" value="${dist}/unittests" />
    <property name="test.build" value="${test}/classes" />
    <property name="test.config" value="${test}/config" />

    <!-- the class path for the test case -->
    <path id="test.classpath">
      <path refid="run.classpath" />
    </path>
  </target>

  <target name="-inittest" depends="-test-setup">
    <mkdir dir="${test.build}" />
    <mkdir dir="${test.results}" />
  </target>

  <target name="cleantest"
        description="Clean the compiled tests and test results">
    <delete dir="${test.build}" includeemptydirs="true"/>
    <delete dir="${test.results}" includeemptydirs="true"/>
  </target>

  <target name="compiletests"
            depends="-inittest,compile,-checkJunit"
            description="Compile the JAVA sources for the test cases">
    <javac destdir="${test.build}"
               optimize="off"
               debug="on"
               deprecation="on"
               includeantruntime="false">
      <src path="${test.src}" />
      <include name="org/jvoicexml/**/*.java" />
      <classpath refid="test.classpath" />
      <compilerarg value="-Xlint:unchecked" />
    </javac>
    <copy todir="${test.build}" overwrite="true">
      <fileset dir="${test.src}">
        <include name="**/*.gram"/>
        <include name="**/*.gsl"/>
        <include name="**/*.vxml"/>
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compiletests"
            description="run unit tests on all test cases">
    <!-- Delete old test results. -->
    <delete dir="${test.results}" failonerror="false">
      <include name="TEST-*"/>
    </delete>
    <junit printsummary="yes"
               maxmemory="256M"
               fork="yes"
               haltonfailure="no"
               showoutput="yes">
      <jvmarg value="-Djava.security.policy=${config}/jvoicexml.policy" />
      <classpath location="${test.build}" />
      <classpath refid="test.classpath" />
      <classpath location="${test.config}" />
      <classpath location="${config}" />
      <classpath>
        <fileset refid="loggings.lib" />
      </classpath>

      <formatter type="brief" usefile="false" />
      <formatter type="xml" />
      <batchtest todir="${test.results}">
        <fileset dir="${test.build}">
          <include name="org/jvoicexml/**/Test*" />
          <exclude name="org/jvoicexml/**/Test*$*" />
          <exclude name="org/jvoicexml/mock/**" />
        </fileset>
      </batchtest>
    </junit>

    <junitreport>
      <fileset dir="${test.results}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${test.results}/html" />
    </junitreport>
  </target>

  <target name="testSingle" depends="compiletests" description="run unit tests on a single test case">
    <fail unless="run.class">Must set property 'run.class'</fail>
    <junit printsummary="yes"
               maxmemory="256M"
               fork="yes"
               haltonfailure="no"
               showoutput="yes">
      <jvmarg value="-Djava.security.policy=${config}/jvoicexml.policy" />
      <classpath location="${test.build}" />
      <classpath refid="test.classpath" />
      <classpath location="${test.config}" />
      <classpath location="${config}" />
      <classpath>
        <fileset refid="loggings.lib" />
      </classpath>

      <formatter type="brief" usefile="false" />
      <formatter type="xml" />
      <test name="${run.class}" todir="${test.results}"/>
    </junit>

    <junitreport>
      <fileset dir="${test.results}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${test.results}/html" />
    </junitreport>
  </target>

  <target name="testHelloDemo" description="run the session demo">
    <property name="run.class" value="org.jvoicexml.voicexmlunit.demo.TestHelloDemo" />
    <ant antfile="${ant.file}" target="testSingle" />
  </target>

  <target name="testInputDemo" description="run the session demo">
    <property name="run.class" value="org.jvoicexml.voicexmlunit.demo.TestInputDemo" />
    <ant antfile="${ant.file}" target="testSingle" />
  </target>

  <target name="testDtmfDemo" description="run the session demo">
    <property name="run.class" value="org.jvoicexml.voicexmlunit.demo.TestDtmfDemo" />
    <ant antfile="${ant.file}" target="testSingle" />
  </target>

  <target name="testSessionDemo" description="run the session demo">
    <property name="run.class" value="org.jvoicexml.voicexmlunit.demo.TestSessionDemo" />
    <ant antfile="${ant.file}" target="testSingle" />
  </target></project>
