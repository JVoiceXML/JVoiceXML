<project name="Nightly build for JVoiceXML" default="nightly" basedir=".">
    <description>
This build file performs a nightly build of JVoiceXML.

The updatewebsite target needs the jsch.jar in the ${ant.home}/lib folder.
It can be downloaded from
http://prdownloads.sourceforge.net/jsch/jsch-0.1.41.jar?download

Furthermore you will need mail.jar in the ${ant.home}/lib folder.
It can be downloaded from
http://java.sun.com/products/javamail/downloads/index.html

To run the JUnit unit tests you need the junit.jar in the
${ant.home}/lib folder.
It can be downloaded from
http://junit.org

The checkout target does not belong to the nightly build process, but it can be
used to set up the nightly build environment.
Download snvant from
http://subclipse.tigris.org/files/documents/906/43359/svnant-1.2.1.zip
and unzip it to this folder.
The jars are expected to be in the same folder as this build file.
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="../org.jvoicexml/personal-props/ant.properties" />
    <property file="../org.jvoicexml/config-props/ant.properties" />

    <target name="-init">
        <tstamp />
        <ant antfile="configuration.xml" target="createDistributionConfiguration" />
    </target>

    <target name="checkout" description="Checkout the SVN repository content">
        <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml">
            <classpath>
                <fileset dir=".">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </taskdef>
        <svnSetting client="javahl" id="svn.settings" failonerror="false" username="${svn.username}" password="${svn.password}" />
        <svn refid="svn.settings">
            <checkout url="https://svn.code.sf.net/p/jvoicexml/code/trunk" />
        </svn>
        <echo>
Checkout complete!

Adapt your settings in
org.jvoicexml/personal-props
    </echo>
    </target>

    <target name="test">
        <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml">
            <classpath>
                <fileset dir="3rdparty/svnant/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </taskdef>
        <svnSetting client="javahl" id="svn.settings" failonerror="false" username="${svn.username}" password="${svn.password}" />
        <svn refid="svn.settings">
            <wcVersion path="." />
        </svn>
    </target>

    <target name="update" depends="-init" description="Update the source code from the SVN repository">
        <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml">
            <classpath>
                <fileset dir="3rdparty/svnant/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </taskdef>
        <svnSetting client="javahl" id="svn.settings" failonerror="false" username="${svn.username}" password="${svn.password}" />
        <svn refid="svn.settings">
            <update dir="." />
            <update dir="../org.jvoicexml.callmanager.mmi" />
            <update dir="../org.jvoicexml.callmanager.sip" />
            <update dir="../org.jvoicexml.callmanager.text" />
            <update dir="../org.jvoicexml.client" />
            <update dir="../org.jvoicexml.config" />
            <update dir="../org.jvoicexml.demo.helloworlddemo" />
            <update dir="../org.jvoicexml.demo.helloworldservletdemo" />
            <update dir="../org.jvoicexml.demo.inputdemo" />
            <update dir="../org.jvoicexml.demo.jtapidemo" />
            <update dir="../org.jvoicexml.demo.objecttagdemo" />
            <update dir="../org.jvoicexml.demo.recorddemo" />
            <update dir="../org.jvoicexml.demo.scriptdemo" />
            <update dir="../org.jvoicexml.demo.subdialogdemo" />
            <update dir="../org.jvoicexml.demo.voicexmlcreationdemo" />
            <update dir="../org.jvoicexml.jndi" />
            <update dir="../org.jvoicexml.implementation.jsapi10" />
            <update dir="../org.jvoicexml.implementation.jsapi20" />
            <update dir="../org.jvoicexml.implementation.jtapi" />
            <update dir="../org.jvoicexml.implementation.marc" />
            <update dir="../org.jvoicexml.implementation.mary" />
            <update dir="../org.jvoicexml.implementation.mrcpv2" />
            <update dir="../org.jvoicexml.implementation.text" />
            <update dir="../org.jvoicexml.mmi.events" />
            <update dir="../org.jvoicexml.processor.srgs" />
            <update dir="../org.jvoicexml.systemtest" />
            <update dir="../org.jvoicexml.systemtest" />
            <update dir="../org.jvoicexml.xml" />
            <update dir="../org.jvoicexml.systemtest.mmi" />
            <update dir="../userguide" />
        </svn>
    </target>

    <target name="distribution" depends="update" description="Create JVoiceXML distribution">
        <ant antfile="distribution.xml" />
    </target>

    <target name="checkstyle" depends="-init"  description="Perform checkstyle checks over all projects">
        <delete dir="dist/checkstyle" failonerror="false" />
        <subant target="checkstyle" inheritall="false" inheritrefs="false"
            failonerror="false">
            <fileset dir="..">
                <include name="org.jvoicexml*/build.xml" />
            </fileset>
        </subant>
    </target>

    <target name="unittests" depends="-init" description="Perform unit tests over all projects">
        <delete dir="dist/unittests" failonerror="false" />
        <!-- Compile the core classes before running the tests. -->
        <ant antfile="build.xml" target="jar" />

        <subant target="checkstyle" inheritall="false" inheritrefs="false"
            failonerror="false">
            <fileset dir="..">
                <include name="org.jvoicexml*/test.xml" />
            </fileset>
        </subant>
        <junitreport>
            <fileset dir="dist/unittests">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="dist/unittests/html" />
        </junitreport>
    </target>

    <target name="systemtest" depends="-init" description="Run the system test">
        <delete dir="dist/systemtest" failonerror="false" />
        <ant dir="../org.jvoicexml.systemtest" antfile="night.xml" inheritall="false" target="run">
            <property name="jvxml.jndi.repository" value="text" />
        </ant>
    </target>

    <target name="updatewebsite" depends="-init" description="Update the web site with the nightly build results">
        <property name="htdocs" value="/home/groups/j/jv/jvoicexml/htdocs" />
        <scp sftp="true" trust="true" verbose="true" todir="${nightly.sf.user}:${nightly.sf.password}@web.sourceforge.net:${htdocs}">
            <fileset dir="dist">
                <include name="systemtest/*" />
                <include name="checkstyle/**" />
            </fileset>
        </scp>
        <scp sftp="true" trust="true" verbose="true" todir="${nightly.sf.user}:${nightly.sf.password}@web.sourceforge.net:${htdocs}/unittests">
            <fileset dir="dist/unittests/html" />
        </scp>
        <scp sftp="true" trust="true" verbose="true" todir="${nightly.sf.user}:${nightly.sf.password}@web.sourceforge.net:${htdocs}/api-${jvxml.version}">
            <fileset dir="doc/api/**" />
        </scp>
        <scp sftp="true" trust="true" verbose="true" todir="${nightly.sf.user}:${nightly.sf.password}@web.sourceforge.net:${htdocs}/nightly/${DSTAMP}-jvxml-${jvxml.version}-src.zip" file="jvxml-${jvxml.version}-src.zip" />
        <scp sftp="true" trust="true" verbose="true" todir="${nightly.sf.user}:${nightly.sf.password}@web.sourceforge.net:${htdocs}/nightly/${DSTAMP}-jvxml-${jvxml.version}.zip" file="jvxml-${jvxml.version}.zip" />
    </target>

    <target name="nightly" description="Run the nightly build" depends="update,distribution,checkstyle,unittests,systemtest,updatewebsite">
        <mail mailhost="${nightly.mail.host}" mailport="${nightly.mail.port}" subject="JVoiceXML nightly build from ${TODAY}" charset="utf-8" replyto="${nightly.mail.user}" user="${nightly.mail.user}" password="${nightly.mail.password}">
            <from address="${nightly.mail.from}" />
            <to address="dirk.schnelle@jvoicexml.org" />
            <cc address="jvoicexml-developer@lists.sourceforge.net" />
            <message>
The JVoiceXML nightly build completed successfully.

The nightly build can be downloaded from
http://jvoicexml.sourceforge.net/nightly/${DSTAMP}-jvxml-${jvxml.version}.zip
http://jvoicexml.sourceforge.net/nightly/${DSTAMP}-jvxml-${jvxml.version}-src.zip

Note that this is a snapshot from the current development trunk that may have
several bugs.
Feel free to report any bugs that you find at
https://sourceforge.net/tracker2/?atid=710729&amp;group_id=128141

Results of the system test can be found at
http://jvoicexml.sourceforge.net/systemtest/index.html

Results of the unit tests can be found at
http://jvoicexml.sourceforge.net/unittests/index.html

Code quality results by checkstyle can be found at
http://jvoicexml.sourceforge.net/checkstyle/
      </message>
        </mail>
    </target>
</project>
