buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'com.github.eerohele.saxon-gradle' version '0.8.0'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = JVOICEXML_GROUP
version = JVOICEXML_VERSION

configurations {
    jvxmlConfiguration
}

def jvxmlConfigurationDir = "${projectDir}/src/main/config"

dependencies {
    jvxmlConfiguration fileTree(jvxmlConfigurationDir)

    compile project(':org.jvoicexml')

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.20.v20190813'

    testCompile group: 'junit', name: 'junit', version: '4.13.1'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

xslt {
    stylesheet "${jvxmlConfigurationDir}/patch-configuration.xsl"
    input "${jvxmlConfigurationDir}/jetty-documentrepository.xml"
    output "${project(':org.jvoicexml').copyConfiguration.destinationDir}/jetty-documentrepository.xml"
    parameters(
        buildpath: "${buildDir}/libs",
        version: JVOICEXML_VERSION,
        libs: configurations.compile
    )
}

task xsltDistribution(type: com.github.eerohele.SaxonXsltTask) {
    stylesheet "${jvxmlConfigurationDir}/patch-configuration.xsl"
    input "${jvxmlConfigurationDir}/jetty-documentrepository.xml"
    output "${project(':org.jvoicexml').copyConfigurationDistribution.destinationDir}/jetty-documentrepository.xml"
    parameters(
        buildpath: "lib",
        version: JVOICEXML_VERSION,
        libs: configurations.compile
    )
}

task copyReferencedLibraries(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile) {
         include 'jetty-server-*.jar',
         'jetty-http-*.jar',
         'jetty-io-*.jar',
         'jetty-util-*.jar',
         'javax.servlet-api-*.jar'
    }
}

jar {
    version = JVOICEXML_VERSION

    dependsOn xslt
    dependsOn xsltDistribution
    dependsOn copyReferencedLibraries
    
    manifest {
        attributes("Implementation-Title": "Document repository based on Jetty",
                   'Implementation-Vendor': 'switch',
                   'Implementation-Version': JVOICEXML_VERSION,
                   'Built-By'       : System.properties['user.name'],
                   'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Created-By'     : "Gradle ${gradle.gradleVersion}",
                   'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                   'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}")
    }
    baseName 'org.jvoicexml.documentserver.jetty'
}

clean {
    delete file("${project(':org.jvoicexml').copyConfiguration.destinationDir}/jetty-documentrepository.xml")
    delete file("${project(':org.jvoicexml').copyConfigurationDistribution.destinationDir}/jetty-documentrepository.xml")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = tasks.jar.baseName
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Document repository based on Jetty'
                description = 'Document repository based on Jetty'
                url = 'https://github.com/JVoiceXML/JVoiceXML'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License, Version 2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }
                developers {
                    developer {
                        id = 'schnelle'
                        name = 'Dirk Schnelle-Walka'
                        email = 'dirk.schnelle@jvoicexml.org'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:JVoiceXML/JVoiceXML.git'
                    developerConnection = 'scm:git:ssh://github.com:JVoiceXML/JVoiceXML.git'
                    url = 'https://github.com/JVoiceXML/JVoiceXML'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/" 
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = JVOICEXML_OSSRH_USERNAME
                password = JVOICEXML_OSSRH_PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

