<project name="org.jvoicexml.talkinghead" default="all" basedir=".">
    <description>
		This file builds and runs the TalkingHead Avatar implementation for JVoiceXML.
    </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <!-- Use the same properties file as in the main project.         -->
    <property file="../../personal-props/ant.properties" />
    <property file="../../config-props/ant.properties" />

    <!-- Load the settings for 3rdparty libraries -->
    <import file="3rdparty-libs.xml" />

    <target name="-setup" depends="-local-3rdparty-setup">
        <!-- The component built here-->
        <property name="component"
            value="org.jvoicexml.talkinghead"/>
        <property name="component.path"
          value="org/jvoicexml/talkinghead"/>

        <property name="src" value="src" />
        <property name="build" value="classes" />
        <property name="config" value="config" />
        <property name="dist" value="${jvxml.core.dir}/dist" />

        <property name="dist.jar" value="${dist}/${component}.jar" />

        <property name="optimize" value="off" />
        <property name="debug" value="on" />

        <!-- the used class path -->
        <path id="build.classpath">
            <path refid="jvxml.core.lib" />
            <fileset refid="log4j.lib" />
			<fileset refid="mary.lib" />
			<fileset refid="jdom.lib" />			
        </path>

        <path id="run.classpath">
            <path refid="build.classpath" />
        </path>
    </target>

    <target name="-init" depends="-setup">
        <mkdir dir="${build}" />
    </target>

    <target name="-checkJVoiceXML">
        <available classname="org.jvoicexml.JVoiceXml" property="jvoicexml.present" classpathref="build.classpath" />
        <fail unless="jvoicexml.present">
Cannot find jvoicexml libraries needed to build the avatar.
Build this jar from the main project first.
        </fail>
    </target>

    <target name="clean" depends="-setup" description="Remove all compiled and ditsribution files">
        <delete dir="${build}" />
        <delete file="${jar.file}" />
    </target>

    <target name="compile" depends="-init,-checkJVoiceXML" description="Compile the JAVA sources">
        <echo message="compiling with debug=${debug}, optimize=${optimize}" />
        <javac destdir="${build}" optimize="${optimize}" debug="${debug}"
            deprecation="on" includeantruntime="false">
            <src path="${src}" />
            <include name="**/*.java" />
            <classpath refid="build.classpath" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="jar" depends="compile" description="Pack all compiled files into jar files">
        <jar jarfile="${dist.jar}" compress="false">
            <fileset dir="${build}">
                <include name="${component.path}/**/*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor" value="JVoiceXML group" />
                    <attribute name="Implementation-Title" value="JVoiceXML Talking Head" />
                    <attribute name="Implementation-Version" value="${version}" />
                </section>
            </manifest>
        </jar>
    </target>

    <target name="run" description="Run the TalkingHead avatar" depends="jar">
        <java classname="org.jvoicexml.talkinghead.TalkingHead" fork="true">
            <classpath>
                <path refid="run.classpath" />
                <pathelement path="${build}" />
            </classpath>
        </java>
    </target>

    <target name="checkstyle" description="Check for JVoiceXML coding standard" depends="compile, -initcheckstyle" if="checkstyle.present">
        <property name="checkstyle-target.dir" value="${dist}/checkstyle/${component}" />
        <mkdir dir="${checkstyle-target.dir}" />
        <property name="checkstyle.data" value="${checkstyle-target.dir}/checkstyle-data.xml" />
        <checkstyle config="${jvxml.core.dir}/etc/jvoicexml-checks.xml" failonviolation="false">
            <classpath>
                <pathelement path="${project.classpath}" />
                <pathelement location="${build}" />
            </classpath>
            <classpath refid="jvxml.core.lib" />
            <fileset dir="${src}">
                <include name="${component.path}/**/*.java" />
            </fileset>
            <formatter type="xml" tofile="${checkstyle.data}" />
        </checkstyle>
        <xslt style="${jvxml.core.dir}/etc/checkstyle-frames.xsl" in="${checkstyle.data}" out="${checkstyle-target.dir}/report.html">
            <param name="output.dir" expression="${checkstyle-target.dir}" />
        </xslt>
    </target>

    <target name="all" depends="run" description="Run the TalkingHead avatar" />
</project>
