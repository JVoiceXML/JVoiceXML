<project name="jvoicexml system test servlet" default="war" basedir=".">
    <description>
    This file builds the servlet war platform for JVoiceXml system tests.
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="../org.jvoicexml/personal-props/ant.properties" />
    <property file="../org.jvoicexml/config-props/ant.properties" />

    <target name="-probe-proxy">
      <condition property="proxy.enabled">
        <and>
          <isset property="proxy.host"/>
          <isreachable host="${proxy.host}"/>
        </and>
      </condition>
    </target>

    <target name="-proxy" depends="-probe-proxy" if="proxy.enabled">
      <property name="proxy.port" value="80"/>
      <property name="proxy.user" value=""/>
      <property name="proxy.pass" value=""/>
      <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"
        proxyuser="${proxy.user}" proxypassword="${proxy.pass}"/>
    </target>

    <target name="-setup">
        <!-- base properties. -->
        <property name="javac.source" value="1.6" />
        <property name="javac.target" value="1.6" />
        <property name="tomcat.home" value="/usr/local/tomcat" />
        <property name="servlet.lib.dir" value="${tomcat.home}/common/lib" />
        <property name="servlet.include" value="servlet-api.jar" />
        <property name="tomcat.startup" value="bin/startup.sh" />
        <property name="tomcat.shutdown" value="bin/shutdown.sh" />
        <property name="aPage" value="http://localhost:8080/irtest/irtests/manifest.xml" />

        <!-- The component built here-->
        <property name="component" value="irtest.war" />
        
        <property name="irtests.location" value="http://www.w3.org/Voice/2004/vxml-ir/irtests.zip" />
        <property name="irtests.file" value="irtests.zip" />

        <!-- directory structure -->
        <property name="src" value="src" />
        <property name="build" value="WebContent/WEB-INF/classes" />
        <property name="lib" value="WebContent/WEB-INF/lib" />
        <property name="webxml" value="WebContent/WEB-INF/web.xml" />
        
        <property name="dist" value="${tomcat.home}/webapps" />

        <!-- main war files -->
        <property name="warfile" value="${component}" />
        <!-- external war file -->
        <property name="external.warfile" value="external.war" />

        <!-- the class path for 3rdparty libraries -->
        <path id="project.classpath">
            <fileset dir="${lib}">
                <include name="*.jar" />
            </fileset>
            <pathelement location="${servlet.lib.dir}/servlet-api.jar" />
        </path>
        <available file="${irtests.file}" property="irtests.present"/>
    </target>

    <target name="-checkJavaVersion">
        <!-- Check if at least java 6 is used. -->
        <condition property="version1.6">
            <or>
                <equals arg1="1.6" arg2="${ant.java.version}" />
            </or>
        </condition>

        <fail unless="version1.6">
			You need at leasr java version 1.6 to compile this project.
			You're using ${ant.java.version}
        </fail>
    </target>

    <target name="-init" depends="-setup">
        <!-- Create build directories -->
        <mkdir dir="${build}" />
    </target>

    <target name="-initcompile" unless="distribution">
        <property name="optimize" value="off" />
        <property name="debug" value="on" />
    </target>

    <target name="clean" depends="-setup" description="Remove all compiled and distribution files">
        <delete dir="${build}" failonerror="false" />
    </target>


    <target name="compile" depends="-init, -initcompile, -checkJavaVersion" description="Compile the sources">
        <echo message="compiling system test servlet with debug=${debug}, optimize=${optimize}" />
        <copy todir="${build}">
            <fileset dir="${src}">
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <javac destdir="${build}" optimize="${optimize}" debug="${debug}" deprecation="on" encoding="iso-8859-1" source="${javac.source}" target="${javac.target}">
            <src path="${src}" />
            <include name="org/jvoicexml/systemtest/servlet/*.java" />
            <classpath refid="project.classpath" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>
    
    <target name="irtests.get" depends="-init,-proxy" unless="irtests.present">
        <echo message="get irtests zip file from ${irtests.location}" />
        <get src="${irtests.location}" 
          dest="${irtests.file}" 
          usetimestamp="true" verbose="true"/>
    </target>
    
    <target name="irtests.unzip" depends="irtests.get">
        <unzip src="${irtests.file}" dest="WebContent/irtests"
          overwrite="false"/>
    </target>
    
    <target name="irtests.replace">
        <property name="irtest.dir" value="WebContent/irtests" />
        <property name="http.root" value="http://localhost:8080/external" />
        <replace file="${irtest.dir}/1003/1003a1.txml" 
            token="http://studio.tellme.com/vxml2-ir-tests/res" 
            value="${http.root}"/>
        <replace file="${irtest.dir}/246/246.txml" 
            token="http://studio.tellme.com/vxml2-ir-tests/res" 
            value="${http.root}"/>
        <replace file="${irtest.dir}/526/526.txml" 
            token="http://studio.tellme.com/vxml2-ir-tests/res" 
            value="${http.root}"/>
        <replace file="${irtest.dir}/528/528a1.txml" 
            token="http://studio.tellme.com/vxml2-ir-tests/res" 
            value="${http.root}"/>
        <replace file="${irtest.dir}/530/530a1.txml" 
            token="http://studio.tellme.com/vxml2-ir-tests/res" 
            value="${http.root}"/>
    </target>

    <target name="war" depends="compile, irtests.get, irtests.unzip, irtests.replace" description="create all servlet files into war files">
        <!-- irtest war file -->
        <echo message="creating irtest war file: ${warfile}" />
        <war destfile="${warfile}" webxml="${webxml}" compress="false">
            <fileset dir="WebContent">
                <include name="**" />
                <exclude name="**/Test*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor" value="JVoiceXML group" />
                    <attribute name="Implementation-Title" value="JVoiceXML system test servlet war" />
                </section>
            </manifest>
        </war>
    </target>

    <target name="external.war" depends="-setup" description="create external files">
        <!-- external test file -->
        <echo message="creating external test file: ${external.warfile}" />
        <war destfile="${external.warfile}" webxml="external_url/WEB-INF/web.xml" compress="false">
            <fileset dir="external_url">
                <include name="**" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor" value="JVoiceXML group" />
                    <attribute name="Implementation-Title" value="JVoiceXML system test external file war" />
                </section>
            </manifest>
        </war>
    </target>
    
    <target name="rebuild" description="Rebuild the jars from scratch" depends="clean,war" />

    <target name="deploy" depends="-setup, war, external.war">
        <copy todir="${dist}" file="${warfile}" />
        <copy todir="${dist}" file="${external.warfile}" />
    </target>
        

	<target name="startupTomcat" depends="-setup, deploy" 
			description="start up tomcat web service.">
		<echo message="startup tomcat web service."/>
		<exec dir="${tomcat.home}" executable="${tomcat.startup}"
		  spawn="true"/>
		<waitfor maxwait="1" maxwaitunit="minute" checkevery="500">
		        <http url="${aPage}"/>
		</waitfor>
		<echo message="tomcat web service started"/>
	</target>

	<target name="shutdownTomcat" depends="-setup" 
		description="shutdown tomcat web service.">
		<exec dir="${tomcat.home}" executable="${tomcat.shutdown}"
		  spawn="true"/>
	</target>
</project>
