<project name="org.jvoicexml" default="jar" basedir=".">
    <description>
This file builds JVoiceXML.
To override the current settings follow the instructions given in
personal-props/README.txt
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="personal-props/ant.properties" />
    <property file="config-props/ant.properties" />

    <!-- Load the settings for 3rdparty libraries -->
    <import file="3rdparty-libs.xml" />
    <import file="platform-targets.xml" />

    <target name="-setup" depends="-3rdparty-setup">
        <!-- The component built here-->
        <property name="component" value="org.jvoicexml"/>

        <!-- directory structure -->
        <property name="src" value="${basedir}/src" />
        <property name="build" value="${basedir}/classes" />
        <property name="dist" value="${basedir}/../${component}/dist" />
        <property name="apidoc" value="${basedir}/doc/api/${component}" />
        <property name="config" value="${basedir}/config" />
        <property name="etc" value="${basedir}/etc" />

        <!-- main jar files -->
        <property name="dist.jvxml.jar" value="${dist}/${component}.jar" />
        <!-- Value must be copied from ../org.jvoicexml.xml/build.xml -->
        <property name="dist.xml.jar" value="${dist}/org.jvoicexml.xml.jar" />

        <!-- the class path for 3rdparty libraries -->
        <path id="project.classpath">
            <fileset refid="log4j.lib" />
            <fileset refid="rhino.lib" />
            <fileset refid="jsonsimple.lib" />
            <fileset refid="pool.lib" />
            <fileset refid="httpcore.lib" />
            <fileset refid="httpclient.lib" />
            <fileset refid="jlibrtp.lib" />
            <fileset refid="jchardet.lib" />
        </path>
    </target>

    <target name="-init" depends="-setup">
        <!-- Create build directories -->
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />
    </target>

	<!-- Clean targets of the configured components. -->
    <target name="-cleancomponents" depends="-cleanPlatforms">
        <ant dir="../org.jvoicexml.xml" inheritall="false" inheritrefs="false"
            target="clean"/>
        <ant dir="../org.jvoicexml.processor.srgs" inheritall="false"
            inheritrefs="false" target="clean"/>
        <ant dir="../org.jvoicexml.config" inheritall="false"
            inheritrefs="false" target="clean"/>
      <ant dir="../org.jvoicexml.client" inheritall="false"
          inheritrefs="false" target="clean"/>
        <ant dir="../org.jvoicexml.jndi" inheritall="false" inheritrefs="false" 
            target="clean"/>
    </target>

    <target name="clean" depends="-cleancomponents"
            description="Remove all compiled and distribution files">
        <delete dir="${build}" failonerror="false" />
        <delete failonerror="false">
            <fileset dir="${dist}">
                <include name="*.jar" />
            </fileset>
        </delete>
    </target>

    <target name="-version" depends="-setup"
      description="Retrieve the SVN version number">
         <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml">
             <classpath>
                 <fileset dir="3rdparty/svnant/lib">
                     <include name="*.jar" />
                 </fileset>
             </classpath>
         </taskdef>
         <property name="svn.base"
             value="https://jvoicexml.svn.sourceforge.net/svnroot/jvoicexml"/>
         <property name="trunk.core.dir"
             value="${svn.base}/core/trunk"/>
         <property name="tag.core.dir"
             value="${svn.base}/core/tags/${jvxml.version}"/>
         <svn javahl="true" username="${svn.username}" password="${svn.password}"
            failonerror="false">
            <wcversion path="."/>
        </svn>
    </target>
        
  
    <target name="-compile"
            depends="-init,-checkJavaVersion,-version"
            description="Compile the core JAVA sources">
      <!-- Build components that are used by the core -->
      <ant dir="../org.jvoicexml.xml" target="jar"
            inheritall="false" inheritrefs="false"/>
      <ant dir="../org.jvoicexml.processor.srgs" target="jar"
          inheritall="false" inheritrefs="false"/>

        <!-- Build the core -->
        <echo message="compiling ${component} with debug=${javac.debug}, optimize=${javac.optimize}" />
        <echo file="${build}/jvoicexml.version">
jvxml.version=${jvxml.version}
jvxml.revision=${revision.max}
        </echo>
        <javac destdir="${build}" includeantruntime="false"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               deprecation="on"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${src}" />
            <exclude name="**/package-info.java" />
            <classpath refid="project.classpath" />
            <classpath location="../org.jvoicexml.xml/classes"/>
            <classpath location="../org.jvoicexml.processor.srgs/classes"/>
            <compilerarg value="-Xlint:unchecked" />
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}">
                <include name="**/*.xsl"/>
            </fileset>
        </copy>

      <!-- Build components that are dependent on the core -->
      <ant dir="../org.jvoicexml.config" target="jar"
            inheritall="false" inheritrefs="false"/>
      <ant dir="../org.jvoicexml.client" target="jar"
            inheritall="false" inheritrefs="false"/>
      <ant dir="../org.jvoicexml.jndi" target="jar"
            inheritall="false" inheritrefs="false"/>
    </target>

    <target name="compile"
            depends="-compile, -buildPlatforms"
            description="Compile the JAVA sources">
    </target  >

    <target name="jar"
            depends="compile"
            description="Pack all compiled files into jar files">
        <!-- main jar file -->
        <jar jarfile="${dist.jvxml.jar}" compress="false">
            <fileset dir="${build}">
                <include name="jvoicexml.version" />
                <include name="org/jvoicexml/**/*.class" />
                <include name="org/jvoicexml/**/*.xsl" />
                <exclude name="org/jvoicexml/**/Test*.class" />
                <exclude name="org/jvoicexml/client/**" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML main" />
                    <attribute name="Implementation-Version"
                        value="${version}" />
                </section>
            </manifest>
        </jar>
    </target>

    <target name="rebuild"
            description="Rebuild the jars from scratch"
            depends="clean,jar" />

    <target name="run"
            description="Runs JVoiceXML with the current configuration"
            depends="jar">
        <ant antfile="run.xml" target="run" />
    </target>

    <target name="shutdown"
            description="Shutdown JVoiceXML"
            depends="jar">
        <ant antfile="run.xml" target="shutdown" />
    </target>

    <target name="createConfiguration"
            description="Runs JVoiceXML with the current configuration"
            depends="jar">
        <ant antfile="configuration.xml" target="createConfiguration" />
    </target>

    <target name="test"
            description="Runs JUnit tests for JVoiceXML"
            depends="jar">
        <ant antfile="test.xml" target="test" />
    </target>

    <target name="coreapidoc" depends="-setup">
        <echo message="creating apidoc for org.jvoicexml.xml"/>
        <ant dir="../org.jvoicexml.xml" target="apidoc"
            inheritall="false" inheritrefs="false"/>
        <ant dir="../org.jvoicexml.processor.srgs" target="apidoc"
            inheritall="false" inheritrefs="false"/>
        <echo message="creating javadoc with access: ${javadoc.access}" />
        <delete dir="${apidoc}" />
        <javadoc destdir="${apidoc}"
                 windowtitle="JVoiceXML Core"
                 author="true"
                 version="true"
                 linksource="true"
                 access="${javadoc.access}"
                 use="true">
            <packageset dir="${src}" />
            <classpath refid="project.classpath" />
            <classpath location="../org.jvoicexml.xml/classes"/>
            <classpath location="../org.jvoicexml.processor.srgs/classes"/>
            <doctitle>
                <![CDATA[JVoiceXML - a free VoiceXML interpreter]]>
            </doctitle>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2005-2012<a href="http://jvoicexml.sourceforge.net">JVoiceXML group</a>.</i>]]>
            </bottom>
        <!-- Custom tags -->
        <tag name="todo" description="Stuff to complete" />
        <tag name="created" description="Creation date" />
        <tag name="updated" description="Update date" />

        <!-- Resolve used libraries -->
        <link offline="true"
              href="http://java.sun.com/javase/6/docs/api/"
              packagelistLoc="${3rdparty.dir}" />
        <link offline="true" resolveLink="false"
              href="${jvxml.core.apidoc}.xml"
              packagelistLoc="${apidoc.basedir}/org.jvoicexml.xml" />
        <link offline="true" resolveLink="false"
              href="${jvxml.core.apidoc}.processor.srgs"
              packagelistLoc="${apidoc.basedir}/org.jvoicexml.processor.srgs" />
        <link offline="true"
              href="http://www.mozilla.org/rhino/apidocs/"
              packagelistLoc="${rhino.dir}" />
        <link offline="true" 
              href="http://logging.apache.org/log4j/docs/api/"
              packagelistLoc="${log4j.dir}" />
        <link offline="true"
              href="http://www.springframework.org/api"
              packagelistLoc="${spring.dir}" />

        <!-- Group definitions -->
        <group title="Implementation platform">
            <package name="org.jvoicexml.implementation*" />
        </group>
        <group title="Call manager">
            <package name="org.jvoicexml.callmanager*" />
        </group>
        <group title="Document Server">
            <package name="org.jvoicexml.documentserver*" />
        </group>
        <group title="Events">
            <package name="org.jvoicexml.event*" />
        </group>
        <group title="Configuration">
            <package name="org.jvoicexml.config*" />
        </group>
        <group title="Main package containing the VoiceXML interpreter">
            <package name="org.jvoicexml.interpreter*" />
        </group>
        </javadoc>

        <!-- Create apidoc for directly dependent components -->
        <ant dir="../org.jvoicexml.config" target="apidoc"
            inheritall="false" inheritrefs="false"/>
        <ant dir="../org.jvoicexml.client" target="apidoc"
          inheritall="false" inheritrefs="false"/>
        <ant dir="../org.jvoicexml.jndi" target="apidoc"
            inheritall="false" inheritrefs="false"/>
    </target>

    <target name="apidoc" depends="coreapidoc,-apidocPlatforms"
        description="Create JAVADOC documentation"/>

    <target name="checkstyle"
        description="Check for JVoiceXML coding standard"
        depends="compile, -initcheckstyle"
        if="checkstyle.present">
        <property name="checkstyle-target.dir"
          value="${dist}/checkstyle/${component}" />
        <mkdir dir="${checkstyle-target.dir}"/>
        <property name="checkstyle.data"
          value="${checkstyle-target.dir}/checkstyle-data.xml" />
        <checkstyle config="${etc}/jvoicexml-checks.xml"
            failonviolation="false">
            <classpath>
                <pathelement path="${project.classpath}" />
                <pathelement location="../org.jvoicexml.xml/classes"/>
                <pathelement location="../org.jvoicexml.processor.srgs/classes"/>
                <pathelement location="${build}" />
            </classpath>
            <fileset dir="${src}">
                <include name="org/jvoicexml/**/*.java" />
            </fileset>
            <formatter type="xml" tofile="${checkstyle.data}"/>
        </checkstyle>
        <xslt style="${etc}/checkstyle-frames.xsl"
              in="${checkstyle.data}"
              out="${checkstyle-target.dir}/report.html">
          <param name="output.dir" expression="${checkstyle-target.dir}"/>
        </xslt>
    </target>
</project>
