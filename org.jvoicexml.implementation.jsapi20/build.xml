<project name="JSAPI2.0 implemenatation platform" default="jar" basedir=".">
    <description>
This file builds the JSAPI 2.0 implemenation platform for JVoiceXml.
To override the current settings follow the instructions given in
personal-props/README.txt

If you want to compile JVoiceXML with JSAPI2 support you will have to download
the jsapi2.jar from http://www.conversations.com/jsapi2/release.php and
copy it into the folder 3rdparty/jsapi2.0/lib.
  </description>

    <!-- allow the user to override setting in an own propertiesfile. -->
    <property file="../jvoicexml/personal-props/ant.properties" />
    <property file="../jvoicexml/config-props/ant.properties" />

    <!-- Load the settings for 3rdparty libraries -->
    <import file="3rdparty-libs.xml" />

    <target name="-setup" depends="-local-3rdparty-setup">
        <!-- directory structure -->
        <property name="src" value="src" />
        <property name="build" value="classes" />
        <property name="dist" value="../jvoicexml/dist" />
        <property name="apidoc" value="../jvoicexml/doc/api" />
        <property name="config" value="config" />
        <property name="etc" value="../jvoicexml/etc" />

        <condition property="windows">
            <os family="windows" />
        </condition>

        <!-- main jar files -->
        <property name="dist.implementation.jsapi20.jar"
                  value="${dist}/jvxml-jsapi2.0.jar" />
        <property name="dist.implementation.jsapi20.jvxml.jar"
                  value="${dist}/jvxml-jsapi2.0-impl.jar" />

        <!-- the class path for 3rdparty libraries -->
        <path id="project.classpath">
            <fileset refid="log4j.lib" />
        </path>
    </target>

    <target name="-checkJavaVersion">
        <!-- Check if at least java 5 is used. -->
        <condition property="version1.5">
            <or>
                <equals arg1="1.5" arg2="${ant.java.version}" />
                <equals arg1="1.6" arg2="${ant.java.version}" />
            </or>
        </condition>

        <fail unless="version1.5">
You need at leasr java version 1.5 to compile this project.
You're using ${ant.java.version}
    </fail>
    </target>

    <target name="-init" depends="-setup">
        <!-- Create build directories -->
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />

        <!-- Check for JSAPI 2 -->
        <path id="jsapi2.path">
            <fileset refid="jsapi2.lib" />
        </path>
        <available classpathref="jsapi2.path"
                   classname="javax.speech.AudioManager"
                   property="jsapi2.present" />
    </target>

    <target name="-initdocs" unless="distribution">
        <property name="access" value="private" />
    </target>

    <target name="-initcompile" unless="distribution">
        <property name="optimize" value="off" />
        <property name="debug" value="on" />
    </target>

    <target name="clean"
            description="Remove all compiled and distribution files">
        <delete dir="${build}" failonerror="false" />
    </target>


    <target name="compile"
            depends="-init, -initcompile, -checkJavaVersion"
            if="jsapi2.present"
            description="Compile the JSAPI 2.0 sources">
        <echo message="compiling JSAPI 2.0 layer with debug=${debug}, optimize=${optimize}" />
        <javac destdir="${build}"
               optimize="${optimize}"
               debug="${debug}"
               deprecation="on"
               encoding="iso-8859-1"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${src}" />
            <include name="org/jvoicexml/implementation/jsapi20/**/*.java" />
            <classpath refid="project.classpath" />
            <classpath>
                <fileset dir="${build}" />
                <fileset refid="jsapi2.lib" />
            </classpath>
            <compilerarg value="-Xlint:unchecked" />
        </javac>
    </target>

    <target name="jar"
            depends="compile"
            description="Pack all compiled files into jar files">
        <!-- jsapi 2.0 implementation jar file -->
        <jar jarfile="${dist.implementation.jsapi20.jar}" compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jsapi20/**/*.class" />
                <exclude name="org/jvoicexml/implementation/jsapi20/jvxml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML jsapi 2.0 base layer" />
                </section>
            </manifest>
        </jar>

        <!-- jsapi 2.0 demo implementation jar file -->
        <jar jarfile="${dist.implementation.jsapi20.jvxml.jar}"
             compress="false">
            <fileset dir="${build}">
                <include name="org/jvoicexml/implementation/jsapi20/jvxml/**/*.class" />
                <exclude name="org/jvoicexml/**/Test*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <section name="common">
                    <attribute name="Implementation-Vendor"
                               value="JVoiceXML group" />
                    <attribute name="Implementation-Title"
                               value="JVoiceXML jsapi 2.0 demo implementation" />
                </section>
            </manifest>
        </jar>
    </target>

    <target name="rebuild"
            description="Rebuild the jars from scratch"
            depends="clean,jar" />

    <target name="checkstyle"
            description="Check for JVoiceXML coding standard"
            depends="compile, -initcheckstyle"
            if="checkstyle.present">
        <!-- checkstyle library -->
        <checkstyle config="${etc}/jvoicexml-checks.xml">
            <classpath>
                <pathelement path="${project.classpath}" />
                <pathelement location="${build}" />
            </classpath>
            <fileset dir="${src}">
                <include name="org/jvoicexml/**/*.java" />
            </fileset>
        </checkstyle>
    </target>
</project>
